apiVersion: apps/v1
kind: Deployment
metadata:
  name: azureeks
  labels:
    app: azureeks
spec:
  selector:
    matchLabels:
      app: azureeks
  template:
    metadata:
      labels:
        app: azureeks
    spec:
      containers:
      - name: azureeks
        image: public.ecr.aws/h8p0y3j3/k8image:26
        imagePullPolicy: Always
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: azureeks-service
  labels:
    app: azureeks
spec:
  type: NodePort
  selector:
    app: azureeks
  ports:
  - port: 80
    targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: azureeks-ingress
  labels:
    app: azureeks
  annotations:
    alb.ingress.kubernetes.io/load-balancer-name: applicationingress
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '10' 
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/success-codes: '200' 
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    
spec:
  rules:
  - host: applicationingress-2099806868.ap-south-1.elb.amazonaws.com
    http: 
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: azureeks-service
            port: 
              number: 80
    

        

