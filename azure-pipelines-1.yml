# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none
variables:
    - group: myvariablesgroup
    
  

pool:
 name: new-agent
 vmimage: salman-007

stages:
    - stage: login_into_docker
      jobs:
          - job: 
            steps:
              - task: CmdLine@2
                displayName: docker_login
                inputs:
                  script: 'echo $(Dockerpassword) | docker login --username $(DockerUsername) --password-stdin'

    - stage: build_docker_image
      jobs:
        - job: 
          steps:
          - task: Bash@3
            displayName: docker-image-build
            inputs:
              targetType: 'inline'
              script: |
                cd aks-purpose-project/
                docker build -t akspurpose-repo:latest .
                docker build -t akspurpose-repo:$(Build.BuildId) .
                docker tag akspurpose-repo:latest abidh786/akspurpose-repo:latest
                docker tag akspurpose-repo:$(Build.BuildId) abidh786/akspurpose-repo:$(Build.BuildId)
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                cd eks-purpose-project
                docker build -t awsekspurposerepo:latest .
                docker build -t awsekspurposerepo:$(Build.BuildId) .
                docker tag awsekspurposerepo:latest abidh786/awsekspurposerepo:latest
                docker tag awsekspurposerepo:$(Build.BuildId) abidh786/awsekspurposerepo:$(Build.BuildId)

    - stage: push_docker_image
      jobs:
        - job:
          steps:
          - task: Bash@3
            displayName: push_docker_image
            inputs:
              targetType: 'inline'
              script: 'docker push abidh786/akspurpose-repo:latest'

    - stage: copy_publish_artifcats
      jobs:
        - job:
          steps:
            - task: CopyFiles@2
              displayName: copy_publish_artificats
              inputs:
                SourceFolder: '$(System.DefaultWorkingDirectory)'
                Contents: 'kuberenetes/*.yml'
                TargetFolder: '$(Build.ArtifactStagingDirectory)'
            - task: PublishBuildArtifacts@1
              inputs:
                PathtoPublish: '$(Build.ArtifactStagingDirectory)'
                ArtifactName: 'drop'
                publishLocation: 'Container'


                                        


  
